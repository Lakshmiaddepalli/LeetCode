/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isUnivalTree(TreeNode root) {
        
boolean lval = root.left == null || (root.val == root.left.val && isUnivalTree(root.left)) ;
boolean rval = root.right == null ||(root.val == root.right.val && isUnivalTree(root.right));
        
        return lval&&rval;
    }
}


public boolean isUnivalTree(TreeNode root) {
        return dfs(root, root.val);
    }
    private boolean dfs(TreeNode n, int v) {
        if (n == null) { return true; }
        if (n.val != v) { return false; }
        return dfs(n.left, v) && dfs(n.right, v);
    } 
