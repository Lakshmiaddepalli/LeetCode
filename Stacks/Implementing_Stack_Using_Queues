class MyStack {

    Queue<Integer> q1 = null;
    Queue<Integer> q2 = null;
    int top = -1;
    
    /** Initialize your data structure here. */
    public MyStack() {
        q1 = new LinkedList<>();
        q2 = new LinkedList<>();
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
        q1.add(x);
        top = x;
        System.out.println(top);
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
        while(q1.size() > 1){
          int val = q1.remove(); 
            q2.add(val);
        }
        int valueremoved = q1.remove();
        
        while(q2.size()> 0){
            int valadd =q2.remove();
            q1.add(valadd);
            top = valadd;
        }

        return valueremoved;
    }
    
    /** Get the top element. */
    public int top() {
        return top;
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
       if(q1.size() > 0)
           return false;
        return true;
    }
}

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack obj = new MyStack();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.top();
 * boolean param_4 = obj.empty();
 */
