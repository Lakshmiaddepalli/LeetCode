class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        
        Arrays.sort(nums);
        List<List<Integer>> ls = new ArrayList<List<Integer>>();
        backtrack(ls,nums,new ArrayList<Integer>(),0);
        return ls;
        
    }
    
    
    public void backtrack(List<List<Integer>> finallist,int[] nums,ArrayList<Integer> temp,int start){
    
    
    List<Integer> al = new ArrayList<Integer>(temp);
      //  if(!finallist.contains(al))
           finallist.add(al);
    
    for(int i = start; i< nums.length; i++){
        if( i > start && nums[i] == nums[i-1]){continue;}
        temp.add(nums[i]);
        backtrack(finallist,nums,temp,i+1);
        temp.remove(temp.size() - 1);
    }
}
    
}
