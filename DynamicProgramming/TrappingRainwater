class Solution {
    public int trap(int[] height) {
        
        if(height.length <= 0){
            return 0;
        }
        int[] resultl2r = new int[height.length];
        int[] resultr2l = new int[height.length];

        
        
        resultl2r[0] = height[0];
        resultr2l[height.length - 1] = height[height.length - 1];
        
        for(int i = 1; i < height.length; i++){
           resultl2r[i] = Math.max(resultl2r[i-1],height[i]); 
        }
        
        for(int i = height.length - 2; i >=0; i--){
           resultr2l[i] = Math.max(resultr2l[i+1],height[i]); 
        }

        int sum = 0;
        
        for(int i = 1; i < height.length-1; i++){
           sum += Math.min(resultl2r[i] ,resultr2l[i]) - height[i];
        }
        return sum;
        
    }
}
