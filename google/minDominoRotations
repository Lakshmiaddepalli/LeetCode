/* 

1. check if the array a[i] can be filled with values of A[0]
2. If yes then return rotation
3. else
   do for a[i] can be filled with B[0]

*/


class Solution {
    public int minDominoRotations(int[] A, int[] B) {
        int n = A.length;
        int rotval = check(A[0],A,B,n);
        if(rotval != -1 || A[0] == B[0])
            return rotval;
        else return check(B[0],B,A,n);
    }
    
    public int check(int valtocheck,int A[],int B[],int n){
        
        int rota = 0;
        int rotb = 0;
        
        for(int i = 0; i < n; i++){
            if(A[i]!= valtocheck && B[i]!= valtocheck){
                return -1;
            }else if(A[i] != valtocheck){
                rota++;
            }else if(B[i] != valtocheck) {
                rotb++;
            }
        }
        
        return Math.min(rota,rotb);
    }
}
