/*
// Employee info
class Employee {
    // It's the unique id of each node;
    // unique id of this employee
    public int id;
    // the importance value of this employee
    public int importance;
    // the id of direct subordinates
    public List<Integer> subordinates;
};
*/
class Solution {
    
    List<Integer> ls = null;
    int sum = 0;
    
    public int getImportance(List<Employee> employees, int id){
        
        Map<Integer,Integer> hmp = new HashMap<Integer,Integer>();
        
        for(Employee e : employees){
            hmp.put(e.id, e.importance);
        }
        
        ls = new ArrayList<Integer>();
        ls.add(id);
        getchildren(id,employees);
    
        
        for(Integer e: ls){
            sum += hmp.get(e);
        }
        
        return sum;
        
    }
    
    public void getchildren(int key,List<Employee> employees){
        for(Employee e: employees){
            if(e.id == key){
                for(Integer i : e.subordinates){
                ls.add(i);
                getchildren(i,employees);
                }
            }
        }
    }
}
