class Solution {
    public boolean validTicTacToe(String[] board) {
        
        char[][] tictactoeboard = new char[3][3];
        
        for(int i = 0; i < 3; i++){
            for(int j = 0; j < 3; j++){
                tictactoeboard[i][j] = board[i].charAt(j);
            }
            
        }
        
        int numx = countplayer('X',tictactoeboard);
        int numo = countplayer('O',tictactoeboard);
        
        if(numo > numx)
            return false;
        
        if(numx > numo + 1)
            return false;
        
        if(Winner('X',tictactoeboard) && Winner('0',tictactoeboard))
            return false;
        
        if(Winner('X',tictactoeboard) && numx < numo)
           return false;
        
        if(Winner('X',tictactoeboard) && numx == numo)
            return false;
        
        if(Winner('O',tictactoeboard) && numx > numo)
            return false;
        
       return true; 
    }
    
    public int countplayer(char player,char[][] board){
        int count = 0;
        for(int i = 0; i < 3; i++){
            for(int j = 0; j < 3; j++){
                if(board[i][j] == player)
                    count++;
            }
        }
        return count;
    }
    
    public boolean Winner(char player,char[][] board){
        if(rows(player,board)) return true;
        if(columns(player,board)) return true;
        if(diagnals(player,board)) return true;
        
        return false;
    }
    
    public boolean rows(char player,char[][] board){
        
        for(int i = 0; i < 3; i++){
        if(board[i][0] == player && board[i][1] == player && board[i][2] == player){
            return true;
        }
    }
        
        return false;
}
    
     public boolean columns(char player,char[][] board){
        
        for(int i = 0; i < 3; i++){
        if(board[0][i] == player && board[1][i] == player && board[2][i] == player){
            return true;
        }
    }
        
        return false;
}
    
      public boolean diagnals(char player,char[][] board){
        
        
        if(board[0][0] == player && board[1][1] == player && board[2][2] == player){
            return true;
        }
    
        if(board[0][2] == player && board[1][1] == player && board[2][0] == player){
            return true;
        }
        
        return false;
}
    

}
    
    
    
    
