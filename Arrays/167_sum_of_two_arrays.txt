import java.util.Arrays;
class Solution {
    public int[] twoSum(int[] numbers, int target) {
        
        int max_index = numbers.length-1;
        int[] result = new int[2];
        
   /*     for(int i = 0;i<numbers.length;i++)
        {
            if(numbers[i] > target){
                max_index = i-1;
                break;
        }
        } */
        
        while(max_index >= 0){
        int diff = target - numbers[max_index];
        int val = binarysearch(numbers,diff);
        if(val!= -1)
        {
            if(val!=max_index){
            result[0] = val + 1;
            result[1] = max_index+1;
            if(val > max_index){       
            result[0] = max_index+1;
            result[1] = val + 1;
            }
            
                
            return result;
            }
            
        }
        max_index--;    
        }
        
        return result;
              
    }
    
   public int binarysearch(int[] arr,int target)
    {
        int first = 0;
        int last =  arr.length - 1;
        
        while(first <= last)
        {
          int mid = (first+last)/2;
          
            if(target < arr[mid])
            {
            	last = mid - 1;
            }
            else if(target > arr[mid])
            {
                first = mid +1;
            }
            else
            {
                return mid;
            }
            
        }
        
       return -1;
    }
}