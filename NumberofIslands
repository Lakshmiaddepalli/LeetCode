class Solution {
    public int numIslands(char[][] grid) {
        
    //1. check null cases
        if(grid.length==0 || grid == null){
            return 0;
        }
        
    //2. dfs on the values having one
        int countofislands = 0;
        for(int i = 0; i < grid.length; i++){
           for(int j = 0; j < grid[0].length; j++) {
               if(grid[i][j] == '1'){
                   countofislands++;
                   dfsongrid(grid,i,j);
               }
           }
        }
        
        
        
    return countofislands;
    }
    
    
    public void dfsongrid(char[][] grid,int row, int column){
     
        if(row < 0 || column < 0 || row >= grid.length || column >= grid[0].length 
           || grid[row][column] == '0'){
            return;
        }
        
        grid[row][column] = '0';
        dfsongrid(grid,row+1,column);
        dfsongrid(grid,row-1,column);
        dfsongrid(grid,row,column-1);
        dfsongrid(grid,row,column+1);
    }
}
